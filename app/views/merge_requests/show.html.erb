<%
# encoding: utf-8
#--
#   Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies)
#   Copyright (C) 2008 Johan Sørensen <johan@johansorensen.com>
#   Copyright (C) 2008 Tor Arne Vestbø <tavestbo@trolltech.com>
#   Copyright (C) 2009 Fabio Akita <fabio.akita@gmail.com>
#   Copyright (C) 2009 Sven Eckelmann <sven.eckelmann@gmx.de>
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU Affero General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU Affero General Public License for more details.
#
#   You should have received a copy of the GNU Affero General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.
#++
%>

<%= breadcrumbs_from(@merge_request) -%>

<h1><%= t("views.merges.show_title", :source => h(@merge_request.source_repository.name), :target => h(@merge_request.target_repository.name)) -%></h1>

<%= render :partial => @merge_request, :locals => { :no_link => true } -%>

<% if logged_in? && @merge_request.resolvable_by?(current_user) && !@merge_request.possible_next_states.blank? -%>
  <% form_for @merge_request, 
      :url => resolve_project_repository_merge_request_path(@project, 
              @repository, @merge_request) do |f| -%>
    <p>
      <%= f.label :status -%><br />
      <%= f.select :status, {'Open' => 'open', 'Merged' => 'merge', 'Rejected' => 'reject'} -%><br />
      
      <%= f.label :reason -%><br />
      <%= f.text_area :reason %><br />
      
      <%= f.submit t("views.merges.update_btn") -%></p>
  <% end -%>

  <% if @merge_request.open? -%>
  <p><%= t("views.merges.help") %></p>
<pre>
git checkout master
git checkout -b review/master
git remote add review <%= @merge_request.source_repository.clone_url %>
git pull review <%= @merge_request.source_branch %>
<% if @merge_request.applies_to_specific_commits? -%>
git reset --hard <%=h @merge_request.ending_commit -%>
<% end %>
# review changes, assess they are ok
git checkout master
git merge review/master
git push origin master
</pre>
  <% end -%>
<% end -%>

<% if @merge_request.open? -%>
<h2><%= t("views.merges.commits") %>:</h2>

<script type="text/javascript" charset="utf-8">
  function toggleComments(index) {
    if ($("commit_" + index).hasClassName("with_comments")) {
      $("commit_" + index).removeClassName("with_comments")
    } else {
      $("commit_" + index).addClassName("with_comments")
    }
    $$('.comment_for_commit_' + index).each(function(e){ 
      e.toggle();
    })
  }
</script>

<% if @commits.blank? -%>
  <p><em>
    It appears that the commits in this merge request have already been merged 
    into <%= link_to(@merge_request.target_repository.name, repo_owner_path(@merge_request.target_repository, 
                  [@merge_request.target_repository.project, @merge_request.target_repository])) -%>.    
  </em></p>
<% else -%>
  <table class="select_commits_from_list">
  <% @commits.each_with_index do |commit, i| %>
    <tr id="commit_<%= i -%>" class="commit_row">
      <td class="commit-details meta">
        <ul>
          <li class="sha-abbrev">
            <%= link_to commit.id_abbrev, 
                  repo_owner_path(@merge_request.source_repository, :project_repository_commit_path, @project, @merge_request.source_repository, commit) %>
          </li>
          <li class="committer">
            <strong><%=h truncate(commit.committer.to_s, :length => 25) %></strong>
          </li>
        </ul>
        <small>
          <%= distance_of_time_in_words_to_now(commit.committed_date) %> ago 
          <% if (comment_count = @commit_comments.select{|c| c.sha1 == commit.id }.size) > 0 -%>
            (<%= link_to_function pluralize(comment_count, "comment", "comments"), 
                  "toggleComments(#{i})" -%>)
          <% end -%>
        </small>
      </td>
      <td class="commit-details message">
        <div class="commit_message inline">
          <%= link_to h(truncate(commit.message, :length => 140)), 
                repo_owner_path(@merge_request.source_repository, :project_repository_commit_path, @project, @merge_request.source_repository, commit)  %>
        </div>
      </td>
    </tr>
    <% @commit_comments.select{|c| c.sha1 == commit.id }.each do |comment| -%>
      <tr class="comment_for_commit_<%= i -%> commit_comments commit_row" style="display:none">
        <td class="commit-details meta">
          <ul>
            <li class="avatar">
              <%= link_to(gravatar(comment.user.email, { :size => 16 }), user_path(comment.user)) %>
            </li>
            <li class="author">
              <%= link_to(h(comment.user.title), comment.user) -%>
            </li>
          </ul>
          <small class="permalink">
            <%= link_to "about " + time_ago_in_words(comment.created_at) + " ago", 
                    repo_owner_path(@merge_request.source_repository, :project_repository_commit_path, 
                        @repository.project, @merge_request.source_repository, comment.sha1) + "##{dom_id(comment)}" -%>
          </small>
        </td>
        <td class="commit-details body">
          <div class="inline">
            <%= link_to truncate(sanitize(comment.body), :length => 70), 
                  repo_owner_path(@merge_request.source_repository, 
                    :project_repository_commit_path, @project,
                    @merge_request.source_repository, commit) + "##{dom_id(comment)}" %>
          </div>
        </td>
      <tr>
    <% end -%>
  <% end %>
  </table>
  <% end -%>
<% end -%>

<h2 id="comments">Comments</h2>
<div class="comments">
  <%= render :partial => @merge_request.comments -%>
</div>
<%= render :partial => "comments/form", :locals => { :parent => @merge_request } -%>
