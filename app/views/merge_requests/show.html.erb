<%
# encoding: utf-8
#--
#   Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies)
#   Copyright (C) 2008 Johan Sørensen <johan@johansorensen.com>
#   Copyright (C) 2008 Tor Arne Vestbø <tavestbo@trolltech.com>
#   Copyright (C) 2009 Fabio Akita <fabio.akita@gmail.com>
#   Copyright (C) 2009 Sven Eckelmann <sven.eckelmann@gmx.de>
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU Affero General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU Affero General Public License for more details.
#
#   You should have received a copy of the GNU Affero General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.
#++
%>

<%= breadcrumbs_from(@merge_request) -%>
<% @page_title = "Merge request ##{@merge_request.id}: #{h(@merge_request.summary)}" -%>

<h1><%= t("views.merges.show_title", :id => h(@merge_request.id), :summary => h(@merge_request.summary)) -%></h1>

<%= render :partial => @merge_request, :locals => { :no_link => true } -%>

<% if @merge_request.open? -%>
<h2><%= t("views.merges.commits_to_merged") %>:</h2>
<% else -%>
<h2><%= t("views.merges.commits") %>:</h2>
<% end -%>

<script type="text/javascript" charset="utf-8">
  function toggleComments(index) {
      if ($("#commit_" + index).hasClass("with_comments")) {
          $("#commit_" + index).removeClass("with_comments")
      } else {
          $("#commit_" + index).addClass("with_comments")
      }
      $('.comment_for_commit_' + index).toggle();
  }
</script>


<%- if @merge_request.versions.size > 1 -%>
  <form>
    <label for="merge_request_version">Select version</label>:
    <select id="merge_request_version" name="version" gts:url="<%= url_for(
      polymorphic_path([
                                 :version,
                                 @merge_request.target_repository.project,
                                 @merge_request.target_repository,
                                 @merge_request]))-%>">
      <option value="">- Select version -</option>
      <%= options_from_collection_for_select(@merge_request.versions, 'version', 'version', @merge_request.current_version_number) %>
    </select>
  </form>
<%- end -%>

<%= render :partial => 'commits' %>

<h2 id="comments">Comments</h2>
<div class="comments">
  <%= render :partial => @merge_request.comments -%>
</div>

<%= render :partial => "comments/form", :locals => { :parent => @merge_request } -%>

<% if logged_in? && @merge_request.user == current_user %>
  <% help_box(:left) do %>
  <p>
    <%= link_to_function("How to update your merge request", "$('detailed_merge_request_update_help').toggle()", :class => "more_info") -%>
  </p>
  <div id="detailed_merge_request_update_help" style="display:none;">
  <p>
    To make updates to your merge requests,
    you can either edit it from <%= link_to("this link", :action => :edit) %> or push your changes through git
    Either way, a new version of your merge request will be created, up until the last commit you push.
    You may make as many updates as you like; the last one will always be displayed by default
  </p>
    

  <pre>
git push \
  <%= @merge_request.target_repository.push_url -%> \
  <%= @merge_request.source_branch -%>:<%= @merge_request.merge_branch_name -%>
  </pre>
  </div>
  <% end %>
<% end %>

<% help_box(:left) do %>
<p>
  <%= link_to_function("How to apply this merge request to your repository", "$('detailed_merge_request_integration_help').toggle()", :class => "more_info") -%>
</p>
<div id="detailed_merge_request_integration_help" style="display:none">
<p>
One way to merge in these changes is to pull them into a local
branch for review, verifying the changes and then merge to back 
to master. 
</p>
  
<pre>
# Check out a new branch for integration
git checkout -b integration

# Fetch the merge request into this branch
git pull \
  <%= @merge_request.target_repository.clone_url %> \
  <%= @merge_request.merge_branch_name %> 

# Show the commits, assess they are okay
git log --pretty=oneline --abbrev-commit master..integration

# To apply the changes to your master branch:
git checkout master
git merge integration
git push origin master
</pre>
</div>
<% end %>


<%- if @merge_request.user == current_user -%>
  <%= button_to t('views.merges.update_btn'), repo_owner_path(@merge_request.target_repository,
      [:edit, @merge_request.source_repository.project, @merge_request.target_repository, @merge_request]), :method => :get %>
  <%= button_to t('views.merges.delete_btn'), repo_owner_path(@merge_request.target_repository,
      [@merge_request.source_repository.project,
      @merge_request.target_repository, @merge_request]), :method => :delete, :confirm => 'Are you sure you want to delete this merge request?' %>
<%- end -%>  
