<%
#--
#   Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies)
#   Copyright (C) 2008 Johan Sørensen <johan@johansorensen.com>
#   Copyright (C) 2008 Tor Arne Vestbø <tavestbo@trolltech.com>
#   Copyright (C) 2009 Fabio Akita <fabio.akita@gmail.com>
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU Affero General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU Affero General Public License for more details.
#
#   You should have received a copy of the GNU Affero General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.
#++
%>

<% @page_title = t("views.blobs.page_title", :path => current_path.join("/"), :repo => @repository.name, :title => @project.title) -%>
<%= breadcrumbs_from(@root) -%>

<% content_for :extra_head do -%>
  <% if highlightable?(@blob) -%>
    <%= stylesheet_link_tag("prettify/prettify.css") -%>
    <%= javascript_include_tag("prettify/prettify.js") -%>
    <% if hl = language_of_file(current_path.last) -%>
      <%= javascript_include_tag("prettify/lang-#{hl}.js", :cache => false) -%>
    <% end -%>
    <script type="text/javascript" charset="utf-8">
      Event.observe(window, "dom:loaded", function(e){
        prettyPrint();
      });
    </script>
  <% end -%>
<% end -%>

<% if false -%>
<ul class="mode_selector">
  <li class="list_header">
    <%= t("views.blobs.wrap") %>:
  </li>
  <li>
    <%= link_to_function t("views.common.toggle"), "Gitorious.Wordwrapper.toggle($$('table#codeblob td.code'))" -%>
  </li>
</ul>
<% end -%>

<!-- mime: <%= @blob.mime_type -%> -->

<% if textual?(@blob) && !too_big_to_render?(@blob.size) -%>
  <% cache(blob_path(@commit.id, @path)) do -%>
    <%= render_highlighted(@blob.data, current_path.last || "") -%>
  <% end -%>
<% elsif textual?(@blob) && too_big_to_render?(@blob.size) -%>
  <p>
	<%= t("views.blobs.too_big").call(self, raw_blob_path(@commit.id, current_path)) %>
  </p>
<% elsif image?(@blob) -%>
  <% cache(blob_path(@commit.id, @path)) do -%>
    <%= image_tag raw_blob_path(@commit.id, current_path) -%>
  <% end -%>
<% else -%>
  <p>
	<%= t("views.blobs.message").call(self, @blob.mime_type, raw_blob_path(@commit.id, current_path)) %>
  </p>
<% end -%>

<h4>Other versions:</h4>
<ul>
  <%- for commit in @other_commits -%>
  <li>
    <%= link_to_unless(@ref == commit.sha, commit.sha[0..10], file_path(@repository, @path, commit.sha)) %> 
    <small><%= truncate(commit.message, :length => 100) %>. Authored <%= distance_of_time_in_words_to_now(commit.authored_date) %> ago</small>
  </li>
  <%- end -%>
</ul>

<div class="page-meta">
  <ul class="page-actions">
    <li><%= link_to t("views.blobs.raw"), raw_blob_path(@ref, current_path) -%></li>
  </ul>
</div>